/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdk 33
    ndkVersion '25.2.9519653'
    
    defaultConfig {
        applicationId 'com.android.hellohlsl'
        minSdk 30
        targetSdk 33
        externalNativeBuild {
            cmake {
                // Available arguments are inside ${SDK}/cmake/.../android.toolchain.cmake file
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    buildFeatures {
        prefab true
    }

    namespace 'com.android.hellohlsl'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def vulkanSdkDir = properties.getProperty('vulkansdk.dir')

    task prepareAssetDir {
        doLast {
            mkdir "${buildDir}/assets/shaders"
        }
    }

    // Built to run on minSdk 30 => Android 11+, so Vulkan API version 1.1 is supported.
    // See: https://source.android.com/docs/core/graphics/implement-vulkan#versions
    def targetEnv = 'vulkan1.1'

    // Compile HLSL shaders to SPIR-V with DXC.
    // Note: Output shader file names (-Fo) match those referenced in hellovk.h.
    task compileFragShader(type: Exec, dependsOn: prepareAssetDir) {
        commandLine "${vulkanSdkDir}/bin/dxc",
                '-T', 'vs_6_7', '-spirv', "-fspv-target-env=${targetEnv}",
                "${projectDir}/src/main/shaders/shader.vert.hlsl",
                '-Fo', "${buildDir}/assets/shaders/shader.vert.spv"
    }
    task compileVertShader(type: Exec, dependsOn: prepareAssetDir) {
        commandLine "${vulkanSdkDir}/bin/dxc",
                '-T', 'ps_6_7', '-spirv', "-fspv-target-env=${targetEnv}",
                "${projectDir}/src/main/shaders/shader.frag.hlsl",
                '-Fo', "${buildDir}/assets/shaders/shader.frag.spv"
    }

    // Add shader directory to asset manager.
    sourceSets.main.assets.srcDirs += new File("${buildDir}/assets")

    // Compile shaders before packaging assets.
    android.applicationVariants.all { variant ->
        variant.mergeAssetsProvider.configure {
            dependsOn compileFragShader
            dependsOn compileVertShader
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.games:games-activity:2.1.0-alpha01'
}

