/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
   id  'com.android.library'
}

android {
    compileSdkVersion 30
    ndkVersion '22.1.7171670'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    // Enable generation of Prefab packages and include them in the library's AAR.
    buildFeatures {
        prefabPublishing true
    }

    // Include the "mylibrary" module from the native build system in the AAR,
    // and export the headers in src/main/cpp/include to its consumers
    prefab {
        mylibrary {
            headers "src/main/cpp/include"
        }
    }

    // Avoid packing the unnecessary libraries into final AAR. For details
    // refer to https://issuetracker.google.com/issues/168777344#comment5
    // Note that if your AAR also contains Java/Kotlin APIs, you should not
    // exclude libraries that are used by those APIs.
    packagingOptions {
        exclude("**/libmylibrary.so")
        exclude("**/libc++_shared.so")
    }

}

