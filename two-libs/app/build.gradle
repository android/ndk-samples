apply plugin: "com.android.model.application"

def libfirst_path = file(project(':lib').projectDir).absolutePath

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.0"

        defaultConfig.with {
            applicationId = "com.example.twolibs"
            minSdkVersion.apiLevel = 4
            targetSdkVersion.apiLevel = 23
        }
    }

    compileOptions.with {
        sourceCompatibility=JavaVersion.VERSION_1_7
        targetCompatibility=JavaVersion.VERSION_1_7
    }

    android.ndk {
        moduleName = "libtwolib-second"
        CFlags += "-I${libfirst_path}/src/main/jni".toString()	
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles  += file("proguard-rules.txt")
        }
    }

    android.sources {
        main {
             jni {
	         dependencies {
		     project ":lib" buildType "debug" linkage "static"
		 }
             }
	     // TODO(proppy): show jniLibs dependencies on .so
        }
    }

    android.productFlavors {
        create("arm") {
            ndk.abiFilters += "armeabi"
        }
        create("arm7") {
            ndk.abiFilters += "armeabi-v7a"
        }
        create("arm8") {
            ndk.abiFilters += "arm64-v8a"
        }
        create("x86") {
            ndk.abiFilters += "x86"
        }
        create("x86-64") {
            ndk.abiFilters += "x86_64"
        }
        create("mips") {
            ndk.abiFilters += "mips"
        }
        create("mips-64") {
            ndk.abiFilters += "mips64"
        }
        create("all")
    }
}
